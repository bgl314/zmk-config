/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/pointing.h>

#include "../zmk-nodefree-config/helper.h"
#include "../zmk-nodefree-config/keypos_def/keypos_42keys.h"  
#include "../private/passwords.h"



#define COLEMAK   0
#define COLEMAK_DEV 1
#define GAMES  2
#define GM_QWE 3
#define GM_ALT 4
#define NUMBERS  5
#define MOUSEKEYS  6 
#define NAV   7
#define ADJUST 8
#define PWD 9

#define QUICK_TAP_MS 175


&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <220>;
    quick-tap-ms = <220>;              // repeat on tap-into-hold
    hold-trigger-key-positions = <0>;  // tap on interrupt
};
&sk {  // sticky-key config
    release-after-ms = <600>;  // release after 0.6s
    quick-release;             // no double capitalization when rolling keys
};

&sl {  // sticky-layer config
    ignore-modifiers;
};

&lt {  // layer-tap config
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <QUICK_TAP_MS>;
};

&caps_word {  // mods deactivate caps-word, requires PR #1441
    /delete-property/ ignore-modifiers;
};


/* Homerow mods */

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5  // left-hand keys
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5  // right-hand keys
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                      // thumb keys

ZMK_BEHAVIOR(hml, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <QUICK_TAP_MS>;
    //global-quick-tap-ms = <150>;        // requires PR #1387
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_R THUMBS>;
    hold-trigger-on-release;            // requires PR #1423
)

ZMK_BEHAVIOR(hmr, hold_tap,  // right-hand HRMs
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <QUICK_TAP_MS>;
    //global-quick-tap-ms = <150>;        // requires PR #1387
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_L THUMBS>;
    hold-trigger-on-release;            // requires PR #1423
)

ZMK_BEHAVIOR(ss_cw, mod_morph,
    bindings = <&sk RSHFT>, <&caps_word>;
    mods = <(MOD_LSFT)>;
)

// use global-quick-tap-ms for combos (requires PR 1387)
//#undef COMBO_HOOK
//#define COMBO_HOOK global-quick-tap-ms = <75>;

#define COMBO_TERM_FAST 20
#define COMBO_TERM_SLOW 35
/* Brackets (horizontal right hand) */
ZMK_COMBO(dcbr,  &dbl_cbr,      RT0 RT1,     COLEMAK COLEMAK_DEV NUMBERS, COMBO_TERM_FAST)
ZMK_COMBO(dpar,  &dbl_paren,    RM0 RM1,     COLEMAK COLEMAK_DEV NUMBERS, COMBO_TERM_FAST)
ZMK_COMBO(dbkt,  &dbl_bkt,      RB0 RB1,     COLEMAK COLEMAK_DEV NUMBERS, COMBO_TERM_FAST)
ZMK_COMBO(dlt,  &dbl_ltgt,      RB2 RB3,     COLEMAK COLEMAK_DEV, COMBO_TERM_FAST)

/* Other symbols (vertical combos) */
ZMK_COMBO(exclm, &kp EXCL,      LT4 LM4,     COLEMAK COLEMAK_DEV  , COMBO_TERM_SLOW)
ZMK_COMBO(at,    &kp AT,        LT3 LM3,     COLEMAK COLEMAK_DEV  , COMBO_TERM_SLOW)
ZMK_COMBO(hash,  &kp HASH,      LT2 LM2,     COLEMAK COLEMAK_DEV  , COMBO_TERM_SLOW)
ZMK_COMBO(dllr,  &kp DLLR,      LT1 LM1,     COLEMAK COLEMAK_DEV  , COMBO_TERM_SLOW)
ZMK_COMBO(prcnt, &kp PRCNT,     LT0 LM0,     COLEMAK COLEMAK_DEV  , COMBO_TERM_SLOW)

ZMK_COMBO(caret, &kp CARET,     RT0 RM0,     COLEMAK COLEMAK_DEV  , COMBO_TERM_SLOW)
ZMK_COMBO(amps,  &kp AMPS,      RT1 RM1,     COLEMAK COLEMAK_DEV  , COMBO_TERM_SLOW)
ZMK_COMBO(star,  &kp STAR,      RT2 RM2,     COLEMAK COLEMAK_DEV  , COMBO_TERM_SLOW)

ZMK_COMBO(tilde, &kp TILDE,     LM4 LB4,     COLEMAK COLEMAK_DEV  , COMBO_TERM_SLOW)
ZMK_COMBO(grave, &kp GRAVE,     LM3 LB3,     COLEMAK COLEMAK_DEV  , COMBO_TERM_SLOW)
ZMK_COMBO(under, &kp UNDER,     LM2 LB2,     COLEMAK COLEMAK_DEV  , COMBO_TERM_SLOW)
ZMK_COMBO(minus, &kp MINUS,     LM1 LB1,     COLEMAK COLEMAK_DEV  , COMBO_TERM_SLOW)
ZMK_COMBO(plus, &kp PLUS,       LM0 LB0,     COLEMAK COLEMAK_DEV  , COMBO_TERM_SLOW)

ZMK_COMBO(pipe,  &kp PIPE,      RM0 RB0,     COLEMAK COLEMAK_DEV  , COMBO_TERM_SLOW)
ZMK_COMBO(equal, &kp EQUAL,     RM1 RB1,     COLEMAK COLEMAK_DEV  , COMBO_TERM_SLOW)
ZMK_COMBO(lt, &kp RS(SEMI),     RM2 RB2,     COLEMAK COLEMAK_DEV  , COMBO_TERM_SLOW)
ZMK_COMBO(gt, &kp SEMI,         RM3 RB3,     COLEMAK COLEMAK_DEV  , COMBO_TERM_SLOW)

ZMK_COMBO(squot,  &kp SQT, RM3 RT3,     COLEMAK COLEMAK_DEV  , COMBO_TERM_SLOW)
ZMK_COMBO(dquot,  &kp RS(SQT), RM4 RT4,     COLEMAK COLEMAK_DEV  , COMBO_TERM_SLOW)
//ZMK_COMBO(scln_ent,  &scln_ret, RM4 RB4,     COLEMAK COLEMAK_DEV  , COMBO_TERM_SLOW)
ZMK_COMBO(nav_ret2,  &kp RET, RH0 RM4,    COLEMAK COLEMAK_DEV NUMBERS  NAV  GAMES, COMBO_TERM_SLOW)
ZMK_COMBO(bkspc_ret,  &kp RET, LH0 LM4,    COLEMAK COLEMAK_DEV  GAMES GM_QWE, COMBO_TERM_SLOW)
ZMK_COMBO(rh_adj,  &mo ADJUST, RH0 RH1,    COLEMAK COLEMAK_DEV  GAMES GM_QWE NAV, COMBO_TERM_FAST)
ZMK_COMBO(games_num,  &mo NUMBERS, LH0 LH1,    GAMES GM_QWE, COMBO_TERM_FAST)
ZMK_COMBO(lh_del,  &kp DEL, LH0 LH1,    COLEMAK COLEMAK_DEV NAV  GAMES GM_QWE, COMBO_TERM_FAST)
ZMK_COMBO(cw_trigger,  &caps_word, RH1 RM1,    COLEMAK COLEMAK_DEV  , COMBO_TERM_FAST)
ZMK_COMBO(bt_clear,  &bt BT_CLR, RT0 RT1 RT2,    ADJUST, COMBO_TERM_FAST)
//ZMK_COMBO(panic_colemak,  &to COLEMAK, RT3 RT4,    ADJUST, COMBO_TERM_FAST)


/ {
    behaviors {

        hhm: hold_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <150>;
            flavor = "hold-preferred";
            bindings = <&kp>, <&kp>;
        };
        
        TAB_NUMBERS: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo NUMBERS>, <&kp TAB>;
        };
        
        

        tm: thumb_mods {
            compatible = "zmk,behavior-hold-tap";
            
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <150>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };
        /*
        scln_ent: tap_dance_8 {
            compatible = "zmk,behavior-tap-dance";
            
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SEMI>, <&scln_ret>;
        };
        */
        z_ret: tap_dance_9 {
            compatible = "zmk,behavior-tap-dance";
            
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp Z>, <&kp RET>;
        };

        td_paren: tap_dance_10 {
            compatible = "zmk,behavior-tap-dance";
            
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LPAR>, <&kp RPAR>;
        };
        td_cbr: tap_dance_11 {
            compatible = "zmk,behavior-tap-dance";
            
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LBRC>, <&kp RBRC>;
        };
        td_bkt: tap_dance_12 {
            compatible = "zmk,behavior-tap-dance";
            
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LBKT>, <&kp RBKT>;
        };
        td_ltgt: tap_dance_13 {
            compatible = "zmk,behavior-tap-dance";
            
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LT>, <&kp GT>;
        };
    };

    macros {
        
        dbl_paren: dbl_paren {
            
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = 
                <&macro_tap &kp LPAR &kp RPAR &kp LEFT>
                ;
        };
        dbl_cbr: dbl_cbr {
            
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = 
                <&macro_tap &kp LBRC &kp RBRC &kp LEFT>
                ;
        };
        dbl_bkt: dbl_bkt {
            
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = 
                <&macro_tap &kp LBKT &kp RBKT &kp LEFT>
                
                ;
        };
        dbl_ltgt: dbl_ltgt {
            
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = 
                <&macro_tap &kp LT &kp GT &kp LEFT>
                ;
        };
        
    };


        keymap {
                compatible = "zmk,keymap";


no_hmr_layer {
// ┌───────────────────────────────────────────────────────────┐
label= "nohmr"                                                  ;
// └───────────────────────────────────────────────────────────┘                                                 ;

   bindings = <
 //╷         ╷         ╷         ╷         ╷         ╷         ╷         ╷╷         ╷         ╷         ╷         ╷         ╷         ╷         ╷
    &trans &kp Q     &kp W     &kp F     &kp P     &kp G                &kp J     &kp L     &kp U     &kp Y     &kp SQT   &trans   
    &trans &kp A    &kp  R      &kp S     &kp T     &kp D               &kp H      &kp N     &kp E      &kp I     &kp O   &trans   
    &trans &z_ret     &kp X     &kp C     &kp V     &kp B                &kp K     &kp M   &kp COMMA  &kp DOT  &kp FSLH  &trans 
                         &mo ADJUST   &lt NUMBERS TAB   &hhm LCTRL BKSP      &tm NAV SPC  &sk RSHFT  &mo MOUSEKEYS 
                        >;
                };

// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

                home_row_mod_layer {
// ┌───────────────────────────────────────────────────────────┐
label= "hmr"                                                  ;
// └───────────────────────────────────────────────────────────┘                                                 ;

   bindings = <
 //╷         ╷         ╷         ╷         ╷         ╷         ╷         ╷╷         ╷         ╷         ╷         ╷         ╷         ╷         ╷
    &trans &trans   &trans   &trans    &trans    &trans                    &trans     &trans     &trans     &trans     &trans &trans 
    &trans &kp A &hml LALT  R   &hml LCTL S  &hml LSHFT T &kp D   &kp H  &trans     &trans     &trans     &trans   &trans   
    &trans &trans  &trans  &trans     &trans     &trans                     &trans     &trans     &trans &trans   &trans &trans 
                        &trans  &trans  &trans     &trans  &trans  &trans
                        >;
                };

// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄


                games_layer {
// ┌───────────────────────────────────────────────────────────┐
label= "GAMES"                                                  ;
// └───────────────────────────────────────────────────────────┘

 bindings = <
 //╷         ╷         ╷         ╷         ╷         ╷         ╷         ╷╷         ╷         ╷         ╷         ╷         ╷         ╷         ╷
&trans &trans   &trans   &trans    &trans    &trans                    &trans     &trans     &trans     &trans     &trans &trans 
&trans &kp A   &kp R    &kp S       &kp T    &kp D                      &trans    &trans     &trans     &trans     &trans &trans 
&trans &kp Z   &trans  &trans     &trans     &trans                     &trans     &trans     &trans &trans   &trans &trans 
                           &kp TAB  &mo GM_ALT     &kp SPACE                 &trans   &trans &trans    
                        >;
                };
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

games_qwerty_layer {
// ┌───────────────────────────────────────────────────────────┐
label= "GM_QWE"                                                  ;
// └───────────────────────────────────────────────────────────┘

 bindings = <
 //╷         ╷         ╷         ╷         ╷         ╷         ╷         ╷╷         ╷         ╷         ╷         ╷         ╷         ╷         ╷
&trans &kp Q   &kp W   &kp E    &kp R    &kp T                    &kp Y     &kp U     &kp I     &kp O     &kp P &trans 
&trans &kp A   &kp S   &kp D    &kp F    &kp G                      &kp H &kp  J &kp  K  &kp  L  &kp  SEMI &trans 
&trans &kp Z   &kp X  &kp C     &kp V     &kp B                     &kp N     &kp M     &kp COMMA &kp FSLH   &kp FSLH &trans 
                          &kp TAB   &mo GM_ALT      &kp SPACE                 &trans   &trans &trans    
                        >;
                };
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

                games_alt_layer {
// ┌───────────────────────────────────────────────────────────┐
label= "GM_ALT"                                                  ;
// └───────────────────────────────────────────────────────────┘

 bindings = <
 //╷         ╷         ╷         ╷         ╷         ╷         ╷         ╷╷         ╷         ╷         ╷         ╷         ╷         ╷         ╷
&trans &kp ESC      &kp F7   &kp F8   &kp F9     &kp F10                     &trans     &trans     &trans     &trans     &trans &trans 
&trans &kp BKSP      &kp F4   &kp F5   &kp F6     &kp F11                        &trans    &trans     &trans     &trans     &trans &trans 
&trans &kp DEL    &kp F1   &kp F2   &kp F3     &kp F12                     &trans     &trans     &trans &trans   &trans &trans 
                            &trans   &trans   &trans                 &trans   &trans &trans    
                        >;
                };
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
                number_layer {
// ┌───────────────────────────────────────────────────────────┐
label= "12345"                                                 ;
// └───────────────────────────────────────────────────────────┘
 bindings = <
 //╷         ╷         ╷         ╷         ╷         ╷         ╷         ╷╷         ╷         ╷         ╷         ╷         ╷         ╷         ╷
 &trans   &kp KP_DIVIDE &kp N7 &kp N8 &kp N9  &kp KP_MINUS       &kp KP_MINUS  &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp KP_DIVIDE &trans 
 &trans   &kp KP_MULTIPLY    &kp N4 &kp N5 &kp N6 &kp KP_PLUS    &kp KP_PLUS  &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp KP_MULTIPLY &trans 
 &trans   &kp DOT   &kp N1 &kp N2 &kp N3 &kp N0            &kp KP_EQUAL  &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp DOT &trans 
                                  &kp SPC  &trans &kp DEL          &kp KP_N0 &trans &trans  
                        >;
                };

// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄


                mouse_layer {
// ┌───────────────────────────────────────────────────────────┐
label= "squeak!"                                                 ;
// └───────────────────────────────────────────────────────────┘
 bindings = <
 //╷         ╷         ╷         ╷         ╷         ╷         ╷         ╷╷         ╷         ╷         ╷         ╷         ╷         ╷         ╷
 &trans   &kp PG_UP &trans  &mmv MOVE_UP     &trans  &trans               &trans   &trans   &trans  &trans  &trans   &trans 
 &trans &kp PG_DN  &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT &trans   &trans   &mkp  LCLK   &mkp  MCLK &mkp  RCLK  &kp ESC  &trans 
 &trans    &trans   &trans   &trans  &trans  &trans                     &trans   &trans   &trans  &trans  &trans   &trans 
                            &kp LALT   &kp LSHFT   &kp LCTRL            &trans   &trans   &trans 
                        >;
                };

// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

                nav_layer {
// ┌───────────────────────────────────────────────────────────┐
label= "NAV"                                                 ;
// └───────────────────────────────────────────────────────────┘
 bindings = <
 //╷         ╷         ╷         ╷         ╷         ╷         ╷         ╷╷         ╷         ╷         ╷         ╷         ╷         ╷         ╷
   &trans  &kp PG_UP    &kp HOME    &kp UP    &kp END    &trans                         &kp KP_NUM    &kp PSCRN    &kp INSERT &kp GUI &td_ltgt   &trans 
   &trans  &kp PG_DN    &kp LEFT &kp DOWN  &kp RIGHT    &kp DEL                         &caps_word    &sk RSHFT  &sk RCTL    &sk RALT  &kp ESC     &trans 
   &trans     &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)   &kp SPACE                     &kp CAPS    &td_paren    &td_cbr    &td_bkt    &kp BSLH   &trans 
                                  &kp ESC &kp TAB   &trans                           &trans    &trans    &trans  
                        >;
                };

// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
                adjust_layer {
// ┌───────────────────────────────────────────────────────────┐
label= "ADJUST"                                                ;
// └───────────────────────────────────────────────────────────┘
 bindings = <
 //╷         ╷         ╷         ╷         ╷         ╷         ╷         ╷╷         ╷         ╷         ╷         ╷         ╷         ╷         ╷
&trans &kp F10 &kp F7   &kp F8 &kp F9      &kp F10                           &bt BT_PRV  &bt BT_SEL 0 &bt BT_NXT  &kp  C_VOL_DN   &kp C_VOL_UP &trans 
&trans &kp F11   &kp F4 &kp F5    &kp F6        &kp F11                      &sl PWD    &sk RSHFT &sk RCTL  &sk RALT   &sk RGUI   &trans  
&trans  &kp F12 &kp F1    &kp F2   &kp F3       &kp F12                     &trans    &to COLEMAK &to COLEMAK_DEV   &to GAMES  &to GM_QWE     &trans 
                            &kp LALT   &kp LSHFT   &kp LCTL                &trans    &trans    &trans    
                        >;
                };
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
                pwd_layer {
// ┌───────────────────────────────────────────────────────────┐
label= "PWD"                                                ;
// └───────────────────────────────────────────────────────────┘
 bindings = <
 //╷         ╷         ╷         ╷         ╷         ╷         ╷         ╷╷         ╷         ╷         ╷         ╷         ╷         ╷         ╷
&trans &trans   &trans   &trans  &trans     &pwd_g                     &trans     &pwd_l    &trans     &trans     &trans &trans 
&trans   &trans   &trans &pwd_s     &trans  &pwd_d                      &trans    &pwd_n     &trans     &trans     &trans &trans 
&trans   &trans   &trans   &trans   &trans     &trans                     &trans     &trans     &trans &trans   &trans &trans 
                            &trans   &trans   &trans                 &trans   &trans &trans                         
                            >;
                };
        };
};